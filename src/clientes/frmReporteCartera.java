/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package clientes;

import clases.clsCliente;
import clases.clsPago;
import clases.clsUtils;
import java.text.DecimalFormat;
import java.util.ArrayList;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class frmReporteCartera extends javax.swing.JInternalFrame {
    MiModelo dtmData = new MiModelo();
    clsUtils objUtils = new clsUtils();
    clsCliente objCliente = new clsCliente();
    /**
     * Creates new form frmReporteCartera
     */
    public frmReporteCartera() {
        initComponents();
        
        dtmData.addColumn("N°");/*.setPreferredWidth(500)*/
        dtmData.addColumn("CEDULA");
        dtmData.addColumn("NOMBRE");
        dtmData.addColumn("SECTOR");
        dtmData.addColumn("TELEFONO");       
        dtmData.addColumn("FECHA CREDITO");  
        dtmData.addColumn("VALOR");
        dtmData.addColumn("PLAZO CREDITO");
        dtmData.addColumn("DIAS DE MORA");
        dtmData.addColumn("VALOR PENDIENTE");
        dtmData.addColumn("ULTIMA OBSERVACION");
        
        
                
        
        //ALINEAR COLUMNA
        DefaultTableCellRenderer tcr = new DefaultTableCellRenderer();
        tcr.setHorizontalAlignment(SwingConstants.RIGHT);
        tblData.getColumnModel().getColumn(3).setCellRenderer(tcr);        
        
        tblData.setAutoCreateRowSorter(true); 
        
        objUtils.vaciarTabla(dtmData);  
        
        buscar_informacion();
    }
    
    public void buscar_informacion()
    {
         ArrayList<clsCliente> dataCliente = objCliente.consultarDataClienteCartera();
                    if(!dataCliente.isEmpty())
                    {
                        llenarData(dataCliente);
                    }
    }
    
    public void llenarData(ArrayList<clsCliente> dataCliente)
    {
        //Double totalEfectivo = 0.00;        
        
        DecimalFormat df1 = new DecimalFormat("##0.00"); 
       
            int maxData = dataCliente.size();  
            String fecha_realizada = "";
            String fecha_registro = "";

            for(int i=0; i<maxData; i++)
            {                    
                 //fecha_realizada = dataPago.get(i).getFechaPago().substring(0, 16);    
                 /*fecha_realizada = dataPago.get(i).getFechaPago().substring(0, 16);    
                 if( dataPago.get(i).getFechaRegistro()==null)
                 {
                     fecha_registro="";
                 }
                 else
                     fecha_registro = dataPago.get(i).getFechaRegistro().substring(0, 16);    
                 Object[] nuevaFila = {  i+1,                          
                                        fecha_realizada,
                                        dataPago.get(i).getNombreCliente(),
                                        "$ " + df1.format(dataPago.get(i).getValor()), 
                                        dataPago.get(i).getNombreUsuario(),   
                                        dataPago.get(i).getReferencia(),
                                        fecha_registro,
                                        dataPago.get(i).getIdPago(),
                                        tipo
                 };        */
                 Object[] nuevaFila = {  i+1,                          
                                        dataCliente.get(i).getCedula(),
                                        dataCliente.get(i).getNameCompleto(),
                                        "sector", 
                                       dataCliente.get(i).getDireccion(),   
                                        dataCliente.get(i).getTlfCelular(),
                                        "",
                                        "",
                                        ""
                 };    

                 //totalEfectivo = totalEfectivo + dataPago.get(i).getValor();             
                 dtmData.addRow(nuevaFila); 
            }         
            //txtTotal.setText("" + (objUtils.redondear(totalEfectivo)));     
        
    }
    
        public class MiModelo extends DefaultTableModel
    {
            @Override
       public boolean isCellEditable (int row, int column)
       {
           // Aquí devolvemos true o false según queramos que una celda
           // identificada por fila,columna (row,column), sea o no editable
          /* if (column == 3)
              return true;*/
           
           return false;
       }
    } 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();

        setName("Form"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tblData.setModel(dtmData);
        tblData.setName("tblData"); // NOI18N
        jScrollPane1.setViewportView(tblData);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblData;
    // End of variables declaration//GEN-END:variables
}
